# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and Release

on:
  push:
    branches:
      - main
      - dev


jobs:
  windows:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          
      - name: Install Dependencies
        shell: pwsh
#        run: dart pub global activate -s path tools/flutter_distributor/packages/flutter_distributor
        run: dart pub global activate flutter_distributor

      - name: Setup Inno Setup 6
        shell: pwsh
        run: |-
          ./tools/is_setup.exe /VERYSLIENT
          Copy-Item "./tools/ChineseSimplified.isl" -Destination "C:\Program Files (x86)\Inno Setup 6\Languages"
      - name: Pack EXE Installer
        run: flutter_distributor package --platform windows --target exe

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Windows Artifact(Build)
          path: build
      - name: Upload Dist Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Windows Artifact(Dist)
          path: dist


  linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Install Dependencies
        run: |-
          sudo apt-get update
          sudo apt-get install clang cmake git ninja-build pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev rpm libayatana-appindicator3-dev patchelf locate libfuse2
          dart pub global activate -s path tools/flutter_distributor/packages/flutter_distributor
          flutter pub get

      - name: Setup AppImageTool
        run: |-
          sudo mv tools/appimagetool-x86_64.AppImage /usr/local/bin/appimagetool
          sudo chmod a+x /usr/local/bin/appimagetool

      - name: Pack Installers
        run: flutter_distributor package --platform linux --targets appimage,deb,rpm

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Linux Artifact(Build)
          path: build
      - name: Upload Dist Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Linux Artifact(Dist)
          path: dist


  macos:
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: Install Dependencies
        run: |-
          flutter pub get
          npm install -g appdmg
          dart pub global activate -s path tools/flutter_distributor/packages/flutter_distributor

      - name: Pack DMG Installer
        run: flutter_distributor package --platform macos --target dmg

      - uses: actions/upload-artifact@v4
        with:
          name: MacOS Artifact(Build)
          path: build
      - name: Upload Dist Artifact
        uses: actions/upload-artifact@v4
        with:
          name: MacOS Artifact(Dist)
          path: dist

  Release:
    runs-on: ubuntu-latest

    needs:
      - Windows
      - Linux
      - macos

    steps:

      - uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: 'Asia/Shanghai'

      - name: Install Tools
        run: |- 
          sudo apt install unzip
          sudo snap install yq

      - name: Download Artifacts
        uses: actions/download-artifact@v3

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: repo

      - name: Set Environment Variable
        run: |
          cd repo
          nyalcf_version=$(yq eval '.version' pubspec.yaml)
          echo "NyaLCF_VERSION=$nyalcf_version" >> $GITHUB_ENV
          cd ..

#      - name: Compress
#        run: |
#          7z a -tzip "MCSL2-${{ env.NyaLCF_VERSION }}-Windows-x64.zip" "./MCSL2-Windows-x64/*"
#          7z a -tzip "MCSL2-${{ env.NyaLCF_VERSION }}-Linux-x64.zip" "./MCSL2-Linux-x64/*"
#          mkdir Update
#          cd Update
#          mkdir Linux-x64 Windows-x64
#          cd Linux-x64
#          mkdir MCSL2Lib
#          cd ..
#          cd Windows-x64
#          mkdir MCSL2Lib
#          cd ..
#          cp -r ../MCSL2-Linux-x64/MCSL2.bin Linux-x64/
#          cp -r ../MCSL2-Windows-x64/MCSL2.exe Windows-x64/
#          cp -r ../MCSL2-Linux-x64/MCSL2Lib/verification.so Linux-x64/MCSL2Lib/
#          cp -r ../MCSL2-Windows-x64/MCSL2Lib/verification.pyd Windows-x64/MCSL2Lib/
#          cd ..
#          7z a -tzip "Update-${{ env.NyaLCF_VERSION }}.zip" "./Update/*"

      - name: Unpack Dist
        run: |-
          unzip  "Windows Artifact(Dist).zip"
          unzip  "Linux Artifact(Dist).zip"
          unzip  "MacOS Artifact(Dist).zip"

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: ./repo/ChangeLog.md
          prerelease: false
          draft: false
          tag_name: v${{ env.NyaLCF_VERSION }}
          files: |
            ${{ env.NyaLCF_VERSION}}/*

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
